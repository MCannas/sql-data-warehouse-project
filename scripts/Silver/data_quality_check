--Check For Nulls or Duplicates in the Primary Key
--Expectation: No Result 
SELECT * FROM bronze.crm_cust_info

SELECT *
FROM bronze.crm_cust_info
WHERE cst_id = 29449;

SELECT cst_id, count(*)
FROM bronze.crm_cust_info
GROUP BY cst_id
HAVING COUNT(*) > 1 OR cst_id IS NULL;

--Use: ROW_NUMBER()
--Assigns a unique number to each row in a result set, based on a defined order.

SELECT
*,
ROW_NUMBER() OVER (PARTITION BY cst_id ORDER BY cst_create_date DESC) as flag_last
FROM bronze.crm_cust_info
WHERE cst_id = 29466;

-- Also Without a WHERE Clause
SELECT
*,
ROW_NUMBER() OVER (PARTITION BY cst_id ORDER BY cst_create_date DESC) as flag_last
FROM bronze.crm_cust_info

--With Only the InCorrect Row(s) Returned.
SELECT
*
FROM (
SELECT
*,
ROW_NUMBER() OVER (PARTITION BY cst_id ORDER BY cst_create_date DESC) as flag_last
FROM bronze.crm_cust_info
)t WHERE flag_last != 1;

--With Only the Correct Row(s) Returned.
SELECT
*
FROM (
SELECT
*,
ROW_NUMBER() OVER (PARTITION BY cst_id ORDER BY cst_create_date DESC) as flag_last
FROM bronze.crm_cust_info
)t WHERE flag_last = 1; -- AND cst_id = 29466
